{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"sca",
				"scala-2.10.7\t(blinkdb-env.sh)"
			],
			[
				"set",
				"set_level\tfunction"
			],
			[
				"query_2d_varianc",
				"query_2d_variance_y"
			],
			[
				"query_2d_va",
				"query_2d_variance_x"
			],
			[
				"approximate_variance",
				"approximate_variance_x_from_to\t(query_engine.py)"
			],
			[
				"num_",
				"num_of_points"
			],
			[
				"XGB",
				"XGBClassifier_sklearn"
			],
			[
				"error_",
				"error_models"
			],
			[
				"answers_for",
				"answers_for_classifier"
			],
			[
				"predictions",
				"predictions\tstatement"
			],
			[
				"cluster_pre",
				"cluster_prediction_summary"
			],
			[
				"Predi",
				"PredictionSummary\tclass"
			],
			[
				"cluster",
				"cluster_points"
			],
			[
				"testing",
				"testing_data"
			],
			[
				"y_cla",
				"y_classifier"
			],
			[
				"optimal",
				"optimal_error"
			],
			[
				"erro",
				"errors_ideal"
			],
			[
				"WLE",
				"WLE_optimal"
			],
			[
				"predi",
				"predictions_classified"
			],
			[
				"y",
				"y_limit"
			],
			[
				"b_show",
				"b_show_rest"
			],
			[
				"cu",
				"cumulative"
			],
			[
				"set_",
				"set_xticklabels"
			],
			[
				"xti",
				"xticks_ax2"
			],
			[
				"bar_",
				"bar_width\tparam"
			],
			[
				"num",
				"num_of_regressions"
			],
			[
				"num_of",
				"num_of_bins"
			],
			[
				"re_",
				"re_plot_range"
			],
			[
				"bin",
				"bin_num"
			],
			[
				"set_x",
				"set_xlim"
			],
			[
				"app",
				"append\tfunction"
			],
			[
				"INP",
				"INPUT_STRING"
			],
			[
				"to",
				"tools"
			],
			[
				"mat",
				"matplotlib_plot_2D_single_regression"
			],
			[
				"datase",
				"dataset_name"
			],
			[
				"file",
				"file_name"
			],
			[
				"datas",
				"dataset_name"
			],
			[
				"data_to_",
				"data_to_plot_without_outliers"
			],
			[
				"box",
				"boxplot"
			],
			[
				"b_",
				"b_show_plot"
			],
			[
				"b",
				"bin_percent"
			],
			[
				"app_",
				"app_boosting\tstatement"
			],
			[
				"prop",
				"proportion_to_show"
			],
			[
				"data_pro",
				"data_proportions_to_plot"
			],
			[
				"data_pr",
				"data_proportion_to_plot"
			],
			[
				"Da",
				"DataSource\tclass"
			],
			[
				"min",
				"min_xvalue"
			],
			[
				"tree",
				"app_decision_tree"
			],
			[
				"da",
				"data"
			],
			[
				"varian",
				"variance_training_points_model\tstatement"
			],
			[
				"vai",
				"variance_training_points_model\tstatement"
			],
			[
				"ave",
				"averageX_training_points_model\tstatement"
			],
			[
				"training",
				"training_data_model"
			],
			[
				"dimen",
				"dimensionX\tstatement"
			],
			[
				"avera",
				"averageX_training_points_model"
			],
			[
				"query",
				"query2mysql\tfunction"
			],
			[
				"hive",
				"hivepassword"
			],
			[
				"dele",
				"deletable.log\t(logs.py)"
			],
			[
				"logg",
				"logger_file"
			],
			[
				"war",
				"warning\t(core.py)"
			],
			[
				"approximate_vari",
				"approximate_variance_y_from_to\tfunction"
			],
			[
				"x",
				"x_min"
			],
			[
				"ex",
				"exact_result\tstatement"
			],
			[
				"time",
				"time_ratio\tfunction"
			],
			[
				"approx",
				"approx_times"
			],
			[
				"appro",
				"approx_results"
			],
			[
				"exa",
				"exact_times"
			],
			[
				"approx_time",
				"approx_times"
			],
			[
				"exac",
				"exact_times"
			],
			[
				"date",
				"datetime"
			],
			[
				"lo",
				"logger\tstatement"
			],
			[
				"try",
				"try\tTry/Except/Finally"
			],
			[
				"rand",
				"randrange\tstatement"
			],
			[
				"Q",
				"Query_Engine_2d"
			],
			[
				"2d",
				"2d_query_engine"
			],
			[
				"allow",
				"b_allow_repeated_value"
			],
			[
				"re",
				"remove_repeated_x_1d\tfunction"
			],
			[
				"l",
				"labels\tstatement"
			],
			[
				"loa",
				"load2d"
			],
			[
				"defa",
				"default_logger_name"
			],
			[
				"qu",
				"query_2d"
			],
			[
				"if",
				"ifmain\tif __name__ == '__main__'"
			],
			[
				"nu",
				"num_training_points\tstatement"
			],
			[
				"plot",
				"plot_training_data_3d\tfunction"
			],
			[
				"training_da",
				"training_data"
			],
			[
				"plot_tr",
				"plot_training_data_2d\tfunction"
			],
			[
				"training_data",
				"training_data_model"
			],
			[
				"pl",
				"matplotlib_plot_2D\tfunction"
			],
			[
				"inte",
				"integrate\tmodule"
			],
			[
				"mesh",
				"mesh_grid_num"
			],
			[
				"print",
				"print_function\tstatement"
			],
			[
				"test_density",
				"test_density_estimation_plt_2d"
			],
			[
				"den",
				"desngity_estimation_plt\tfunction"
			],
			[
				"log",
				"logger_object\t(core.py)"
			],
			[
				"data",
				"data_loader\t(test_query_engine.py)"
			],
			[
				"tru",
				"True\tinstance"
			],
			[
				"logger",
				"logger_object"
			],
			[
				"base",
				"base_models"
			],
			[
				"de",
				"density_estimation\tfunction"
			],
			[
				"Que",
				"QueryLogs"
			],
			[
				"De",
				"DEBUG\tstatement"
			],
			[
				"score",
				"score_samples\tfunction"
			],
			[
				"tesing",
				"testing_data"
			],
			[
				"split",
				"split_data_to_2\tfunction"
			],
			[
				"__",
				"__name__\t(core.py)"
			],
			[
				"trai",
				"training_data_model"
			],
			[
				"lab",
				"labels"
			],
			[
				"training_dat",
				"training_data_model"
			],
			[
				"C",
				"ClientClass"
			],
			[
				"Advance",
				"AdvancedTestSuite\t(test_advanced.py)"
			],
			[
				"flot",
				"float2str\t(Data.py)"
			],
			[
				"assertT",
				"assertTrue\tjunit method"
			],
			[
				"toS",
				"toString()\tfunc"
			],
			[
				"println",
				"println()\tfunc"
			],
			[
				"me",
				"messageUtil"
			],
			[
				"assert",
				"assertEquals\tjunit method"
			],
			[
				"Test",
				"Test\tjunit anno"
			],
			[
				"M",
				"MessageUtil\t(MessageUtil.java)"
			],
			[
				"TestU",
				"TestJunit\t(TestJunit.java)"
			],
			[
				"qin",
				"qingzhi.HelloWorld\t(build.xml)"
			],
			[
				"i-sca",
				"I-Scanner\tinit"
			],
			[
				"pub",
				"public"
			],
			[
				"test",
				"Test\tjunit anno"
			],
			[
				"H",
				"HelloWorld\t(HelloWorld.java)"
			],
			[
				"cla",
				"classes"
			],
			[
				"h",
				"HelloWorld"
			],
			[
				"sr",
				"src.dir"
			],
			[
				"buil",
				"build.dir"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"doc",
				"AutoDocstring: Current"
			],
			[
				"do",
				"AutoDocstring: Current"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"au",
				"AutoPEP8: Format Code"
			],
			[
				"outli",
				"Browse Mode: Outline (Right)"
			],
			[
				"PEP8",
				"AutoPEP8: Format Code"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"auto",
				"AutoDocstring: Current"
			],
			[
				"fold",
				"Fold Python : fold content"
			],
			[
				"uni",
				"UnitTesting"
			],
			[
				"unit",
				"UnitTesting"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"bro",
				"Browse Mode: Outline (Right)"
			],
			[
				"package",
				"Install Package Control"
			]
		],
		"width": 524.0
	},
	"console":
	{
		"height": 130.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/tmp/rsub-eihq3o/hive_job_log_blinkdb_201807021551_1869163645.txt",
		"/tmp/rsub-xwsk9u/blinkdb-env.sh",
		"/tmp/rsub-ddg5eh/blinkdb-env.sh",
		"/tmp/rsub-cyf1to/.bashrc",
		"/tmp/rsub-jjyxm8/blinkdb-env.sh",
		"/tmp/rsub-gfax5r/blinkdb-env.sh",
		"/tmp/rsub-01z_ux/blinkdb-env.sh",
		"/tmp/rsub-izatw9/blinkdb-env.sh",
		"/tmp/rsub-hzleig/blinkdb-env.sh",
		"/tmp/rsub-ult3wy/.bashrc",
		"/tmp/rsub-si909e/.bashrc",
		"/tmp/rsub-4nnaqk/blinkdb-env.sh",
		"/tmp/rsub-omdc6d/blinkdb-env.sh",
		"/tmp/rsub-64lyeb/hive_job_log_blinkdb_201806261701_969073991.txt",
		"/tmp/rsub-s08b6l/.bashrc",
		"/tmp/rsub-eu0oig/sbt.list",
		"/disk/workspace/CRegressionRDBM/creg/logs.py",
		"/disk/workspace/CRegressionRDBM/query/load_data/tcp_ds.sql",
		"/disk/workspace/CRegressionRDBM/creg/query_engine.py",
		"/disk/workspace/CRegressionRDBM/creg/data_loader.py",
		"/disk/workspace/CRegressionRDBM/creg/evaluate2d.py",
		"/disk/workspace/CRegressionRDBM/creg/evaluation.py",
		"/disk/workspace/CRegressionRDBM/results/5m.log",
		"/disk/workspace/CRegressionRDBM/results/100k_0_5.log",
		"/disk/workspace/CRegressionRDBM/results/100k_1.log",
		"/disk/workspace/CRegressionRDBM/results/1m.log",
		"/disk/workspace/CRegressionRDBM/results/1m_0_5.log",
		"/disk/workspace/CRegressionRDBM/results/1m_1.log",
		"/disk/workspace/CRegressionRDBM/creg/core.py",
		"/tmp/rsub-6dj3ju/.bashrc",
		"/tmp/rsub-dyxf1e/.bashrc",
		"/tmp/rsub-kv1c_i/blinkdb-env.sh",
		"/tmp/rsub-eyqn3d/blinkdb-env.sh",
		"/tmp/rsub-geut1w/blinkdb-env.sh",
		"/tmp/rsub-8mcbht/plugins.sbt",
		"/tmp/rsub-30vprk/plugins.sbt",
		"/tmp/rsub-onj2wr/blinkdb-env.sh",
		"/tmp/rsub-f67_7y/hive_job_log_blinkdb_201806221620_422072744.txt",
		"/tmp/rsub-9iww1k/blinkdb-env.sh",
		"/tmp/rsub-ga1ehe/plugins.sbt",
		"/tmp/rsub-rdxsln/sbt",
		"/tmp/rsub-ubd10u/.bashrc",
		"/tmp/rsub-uarkj3/.bashrc",
		"/tmp/rsub-_o99m2/blinkdb-env.sh_backup",
		"/tmp/rsub-m6uvgv/blinkdb-env.sh",
		"/tmp/rsub-tn2it5/blinkdb-env.sh",
		"/tmp/rsub-cbskvp/plugins.sbt",
		"/tmp/rsub-wspx0i/.bashrc",
		"/tmp/rsub-bw9ta6/.bashrc",
		"/tmp/rsub-kaldev/.bashrc",
		"/tmp/rsub-qa1q88/.bashrc",
		"/tmp/rsub-8kx_hc/.bashrc",
		"/home/u1796377/.ssh/config",
		"/tmp/rsub-hxi54_/generate_sample.sh",
		"/tmp/rsub-tou82q/generate_sample.sh",
		"/tmp/rsub-buy_2u/gol_sort.sh",
		"/tmp/rsub-_p58bu/gol_sort.sh",
		"/home/u1796377/Desktop/gol_sort.sh",
		"/tmp/rsub-3rbue5/mysqld.cnf",
		"/tmp/rsub-a7qo__/hive-site.xml",
		"/tmp/rsub-i91cw6/hive-env.sh",
		"/tmp/rsub-l6cn8u/hive-env.sh",
		"/tmp/rsub-g8cbqm/hive-site.xml",
		"/tmp/rsub-hwkrye/.bashrc",
		"/home/u1796377/Desktop/adsfa/index.html",
		"/tmp/rsub-lyiznp/generate_sample.sh",
		"/tmp/rsub-0ql_bx/generate_sample.sh",
		"/tmp/rsub-atnulu/generate_sample.sh",
		"/tmp/rsub-ruhe7k/mysqld.cnf",
		"/tmp/rsub-w8rldd/my.cnf",
		"/tmp/rsub-pmcmv9/mysql.cnf",
		"/disk/workspace/CRegressionRDBM/creg/tools.py",
		"/tmp/rsub-nwuq68/generate_sample.sh",
		"/tmp/rsub-pfeg3p/generate_sample.sh",
		"/tmp/rsub-9fecjy/hive-site.xml",
		"/disk/workspace/CRegressionRDBM/creg/plot_results.py",
		"/disk/workspace/CRegressionRDBM/.gitignore",
		"/disk/workspace/CRegressionRDBM/creg/1_ensem.ipynb",
		"/home/u1796377/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
		"/home/u1796377/.config/sublime-text-3/Packages/Anaconda/Anaconda.sublime-settings",
		"/disk/workspace/paper_git_backup/16127606tztmhbztpbrq/cikm18-optimalregression-sigconf.tex",
		"/disk/workspace/CRegressionRDBM/results/deletable.log",
		"/disk/workspace/CRegressionRDBM/setup.py",
		"/home/u1796377/workspace/shells/while.sh",
		"/disk/workspace/CRegressionRDBM/sdfs",
		"/home/u1796377/workspace/shells/fisrt.sh",
		"/disk/workspace/CRegressionRDBM/requirements.txt",
		"/disk/workspace/CRegressionRDBM/results/6_AVG_0.5.txt",
		"/disk/workspace/CRegressionRDBM/creg/cli.py",
		"/disk/workspace/CRegressionRDBM/results/6_SUM_5.txt",
		"/disk/workspace/CRegressionRDBM/results/6_COUNT_5.txt",
		"/disk/workspace/CRegressionRDBM/results/6_COUNT_1.txt",
		"/disk/workspace/CRegressionRDBM/results/6_COUNT_0.5.txt",
		"/home/u1796377/.config/sublime-text-3/Packages/Jedi - Python autocompletion/Default.sublime-keymap",
		"/home/u1796377/Program/HIVE_ON_SPARK/spark-2.1.0-bin-hadoop2-without-hive/conf/hive-site.xml",
		"/opt/hive/conf/hive-site.xml",
		"/opt/apache-hive-2.3.3-bin/conf/hive-site.xml",
		"/opt/hive/conf/hive-env.sh",
		"/opt/spark/conf/spark-env.sh",
		"/disk/workspace/CRegressionRDBM/results/6.txt",
		"/home/u1796377/.bashrc",
		"/home/u1796377/Program/hadoop/hadoop-2.7.4/etc/hadoop/core-site.xml",
		"/disk/TPC/TPC-DS/tools/makefile",
		"/disk/workspace/CRegressionRDBM/query/load_data/file1.sql",
		"/home/u1796377/Program/apache-hive-2.3.3-bin/conf/hive-site.xml",
		"/home/u1796377/Documents/CV/CV_latex/CV_Qingzhi_Ma.tex",
		"/home/u1796377/.config/sublime-text-3/Packages/User/Anaconda.sublime-settings",
		"/disk/workspace/CRegressionRDBM/CRegressionRDBMWorkspace.sublime-project",
		"/disk/workspace/CRegressionRDBM/blinkDB_query/query/file5_u.q",
		"/disk/workspace/CRegressionRDBM/blinkDB_query/query/file6_u.q",
		"/disk/workspace/CRegressionRDBM/blinkDB_query/query/file7_u.q",
		"/disk/workspace/CRegressionRDBM/blinkDB_query/query/file8_u.q",
		"/disk/workspace/CRegressionRDBM/blinkDB_query/query/file4_u.q",
		"/disk/workspace/CRegressionRDBM/blinkDB_query/load_data/file1_u.q",
		"/disk/workspace/CRegressionRDBM/blinkDB_query/load_data/file2_u.q",
		"/disk/workspace/CRegressionRDBM/blinkDB_query/load_data/file3_u.q",
		"/disk/workspace/CRegressionRDBM/blinkDB_query/load_data/file4_u.q",
		"/disk/workspace/CRegressionRDBM/blinkDB_query/load_data/file5_u.q",
		"/disk/workspace/CRegressionRDBM/blinkDB_query/load_data/file6_u.q",
		"/disk/workspace/CRegressionRDBM/blinkDB_query/load_data/file7_u.q",
		"/disk/workspace/CRegressionRDBM/blinkDB_query/load_data/file8_u.q",
		"/disk/workspace/CRegressionRDBM/blinkDB_query/query/file1_u.q",
		"/disk/workspace/CRegressionRDBM/blinkDB_query/query/file2_u.q",
		"/disk/workspace/CRegressionRDBM/blinkDB_query/query/file3_u.q",
		"/disk/workspace/CRegressionRDBM/blinkDB_query/query/file8.q",
		"/disk/workspace/CRegressionRDBM/blinkDB_query/query/file7.q",
		"/disk/workspace/CRegressionRDBM/blinkDB_query/query/file6.q",
		"/disk/workspace/CRegressionRDBM/blinkDB_query/query/file5.q"
	],
	"find":
	{
		"height": 28.0
	},
	"find_in_files":
	{
		"height": 104.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 40.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Anaconda Python Builder",
	"project": "setup.sublime-project",
	"replace":
	{
		"height": 52.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"tests/test_basic.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 376.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
