{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"nu",
				"num_training_points\tstatement"
			],
			[
				"set",
				"set_logging\tfunction"
			],
			[
				"plot",
				"plot_training_data_3d\tfunction"
			],
			[
				"training_da",
				"training_data"
			],
			[
				"app",
				"append\tfunction"
			],
			[
				"num",
				"num_total_training_points"
			],
			[
				"plot_tr",
				"plot_training_data_2d\tfunction"
			],
			[
				"training_data",
				"training_data_model"
			],
			[
				"pl",
				"matplotlib_plot_2D\tfunction"
			],
			[
				"inte",
				"integrate\tmodule"
			],
			[
				"set_x",
				"set_xlabel"
			],
			[
				"mesh",
				"mesh_grid_num"
			],
			[
				"print",
				"print_function\tstatement"
			],
			[
				"test_density",
				"test_density_estimation_plt_2d"
			],
			[
				"den",
				"desngity_estimation_plt\tfunction"
			],
			[
				"log",
				"logger_object\t(core.py)"
			],
			[
				"data",
				"data_loader\t(test_query_engine.py)"
			],
			[
				"tru",
				"True\tinstance"
			],
			[
				"logger",
				"logger_object"
			],
			[
				"base",
				"base_models"
			],
			[
				"de",
				"density_estimation\tfunction"
			],
			[
				"Que",
				"QueryLogs"
			],
			[
				"De",
				"DEBUG\tstatement"
			],
			[
				"score",
				"score_samples\tfunction"
			],
			[
				"tesing",
				"testing_data"
			],
			[
				"split",
				"split_data_to_2\tfunction"
			],
			[
				"__",
				"__name__\t(core.py)"
			],
			[
				"trai",
				"training_data_model"
			],
			[
				"training",
				"training_data_classifier"
			],
			[
				"lab",
				"labels"
			],
			[
				"training_dat",
				"training_data_model"
			],
			[
				"num_",
				"num_total_training_points\tstatement"
			],
			[
				"C",
				"ClientClass"
			],
			[
				"Advance",
				"AdvancedTestSuite\t(test_advanced.py)"
			],
			[
				"flot",
				"float2str\t(Data.py)"
			],
			[
				"assertT",
				"assertTrue\tjunit method"
			],
			[
				"toS",
				"toString()\tfunc"
			],
			[
				"println",
				"println()\tfunc"
			],
			[
				"me",
				"messageUtil"
			],
			[
				"assert",
				"assertEquals\tjunit method"
			],
			[
				"Test",
				"Test\tjunit anno"
			],
			[
				"M",
				"MessageUtil\t(MessageUtil.java)"
			],
			[
				"TestU",
				"TestJunit\t(TestJunit.java)"
			],
			[
				"qin",
				"qingzhi.HelloWorld\t(build.xml)"
			],
			[
				"i-sca",
				"I-Scanner\tinit"
			],
			[
				"pub",
				"public"
			],
			[
				"test",
				"Test\tjunit anno"
			],
			[
				"H",
				"HelloWorld\t(HelloWorld.java)"
			],
			[
				"cla",
				"classes"
			],
			[
				"h",
				"HelloWorld"
			],
			[
				"sr",
				"src.dir"
			],
			[
				"buil",
				"build.dir"
			],
			[
				"bui",
				"build.dir"
			],
			[
				"pa",
				"path"
			],
			[
				"onmouseo",
				"onmouseover\tAttr"
			],
			[
				"getEl",
				"getElementById\t( elementId: DOMString ): Element Document"
			],
			[
				"getE",
				"getElementById\t( elementId: DOMString ): Element Document"
			],
			[
				"fun",
				"function"
			],
			[
				"s",
				"style"
			],
			[
				"d",
				"demo"
			],
			[
				"in",
				"innerHTML"
			],
			[
				"get",
				"getElementById"
			],
			[
				"re",
				"repeat-x"
			],
			[
				"t",
				"type\tAttr"
			],
			[
				"action",
				"action_page"
			],
			[
				"col",
				"color"
			],
			[
				"my",
				"myFunction"
			],
			[
				"co",
				"color"
			],
			[
				"back",
				"background-color"
			],
			[
				"list",
				"list-style-type"
			],
			[
				"he",
				"head2"
			],
			[
				"head",
				"head1"
			],
			[
				"font",
				"font-size"
			],
			[
				"ba",
				"background-color"
			],
			[
				"rgb",
				"rgba()"
			],
			[
				"bo",
				"border"
			],
			[
				"text",
				"text-align"
			],
			[
				"fon",
				"font-family"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "QueryLogs:\n    __init__(‚Ä¶)\n    set_logging(‚Ä¶)\n    set_no_output(‚Ä¶)",
			"settings":
			{
				"buffer_size": 66,
				"line_ending": "Unix",
				"name": "ùåÜ Outline",
				"scratch": true
			}
		},
		{
			"file": "creg/core.py",
			"settings":
			{
				"buffer_size": 76741,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "creg/query_engine.py",
			"settings":
			{
				"buffer_size": 8206,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "creg/data_loader.py",
			"settings":
			{
				"buffer_size": 29551,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "#!/usr/bin/env python\n# coding=utf-8\nimport logging.config\nimport logging\nimport core\ndefault_logger_name = \"../results/deletable.log\"\n\n\nclass QueryLogs:\n    \"\"\"docstring for ClassName\"\"\"\n\n    def __init__(self, log=None):\n        self.fh = None  # logger file handler\n        self.ch = None  # logger console handler\n        self.num_dataset = 8\n        self.logger = logging.getLogger(default_logger_name)\n        self.logging = logging\n        if log == None:\n            self.set_logging(default_logger_name)\n            self.logger_name = default_logger_name\n        else:\n            self.set_logging(log)\n            self.logger_name = log\n        # self.set_no_output()\n\n    def set_logging(self, file_name=default_logger_name):\n        self.logger.removeHandler(self.fh)\n        self.logger.removeHandler(self.ch)\n        self.logger.setLevel(logging.DEBUG)\n        # create file handler which logs even debug messages\n        self.fh = logging.FileHandler(file_name, mode='w')\n        self.fh.setLevel(logging.DEBUG)\n        # create console handler with a higher log level\n        self.ch = logging.StreamHandler()\n        self.ch.setLevel(logging.DEBUG)\n        # create formatter and add it to the handlers\n        formatter = self.logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')\n        formatter = self.logging.Formatter('%(levelname)s - %(message)s')\n        #formatter = self.logging.Formatter('%(message)s')\n        self.fh.setFormatter(formatter)\n        self.ch.setFormatter(formatter)\n        # add the handlers to the logger\n        self.logger.addHandler(self.fh)\n        self.logger.addHandler(self.ch)\n\n    def set_no_output(self):\n        self.logger.removeHandler(self.fh)\n        self.logger.removeHandler(self.ch)\n        self.logger.setLevel(60)\n\n\nif __name__ == \"__main__\":\n    ql = QueryLogs()\n    ql.logger.info(\"haha\")\n    ql.logger.warning(\"warning\")\n    coreQ = core.CRegression()\n",
			"file": "creg/logs.py",
			"file_size": 2229,
			"file_write_time": 131649910086835414,
			"settings":
			{
				"buffer_size": 1943,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 184.0,
		"last_filter": "install",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"au",
				"AutoPEP8: Format Code"
			],
			[
				"outli",
				"Browse Mode: Outline (Right)"
			],
			[
				"PEP8",
				"AutoPEP8: Format Code"
			],
			[
				"doc",
				"AutoDocstring: Current"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"auto",
				"AutoDocstring: Current"
			],
			[
				"fold",
				"Fold Python : fold content"
			],
			[
				"uni",
				"UnitTesting"
			],
			[
				"unit",
				"UnitTesting"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"bro",
				"Browse Mode: Outline (Right)"
			],
			[
				"package",
				"Install Package Control"
			]
		],
		"width": 524.0
	},
	"console":
	{
		"height": 130.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/disk/workspace/CRegressionRDBM",
		"/disk/workspace/CRegressionRDBM/creg",
		"/disk/workspace/CRegressionRDBM/results",
		"/disk/workspace/CRegressionRDBM/tests"
	],
	"file_history":
	[
		"/home/u1796377/.config/sublime-text-3/Packages/AutoPEP8/Default.sublime-keymap",
		"/disk/workspace/CRegressionRDBM/CRegressionRDBMWorkspace.sublime-project",
		"/disk/workspace/CRegressionRDBM/creg/query_engine.py",
		"/home/u1796377/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
		"/disk/workspace/CRegressionRDBM/creg/logs.py",
		"/home/u1796377/.config/sublime-text-3/Packages/Jedi - Python autocompletion/Default.sublime-keymap",
		"/home/u1796377/.config/sublime-text-3/Packages/TrailingSpaces/README.md",
		"/home/u1796377/.config/sublime-text-3/Packages/Jedi - Python autocompletion/sublime_jedi.sublime-settings",
		"/home/u1796377/.config/sublime-text-3/Packages/Jedi - Python autocompletion/Default.sublime-mousemap",
		"/home/u1796377/.config/sublime-text-3/Packages/User/Default.sublime-keymap",
		"/disk/workspace/CRegressionRDBM/tests/test_query_engine.py",
		"/home/u1796377/.config/sublime-text-3/Packages/User/Python.sublime-settings",
		"/home/u1796377/.config/sublime-text-3/Packages/User/Anaconda.sublime-settings",
		"/disk/workspace/CRegressionRDBM/requirements.txt",
		"/disk/workspace/CRegressionRDBM/tests/test_core.py",
		"/disk/workspace/CRegressionRDBM/creg/data_loader.py",
		"/disk/workspace/CRegressionRDBM/creg/evaluation.py",
		"/disk/workspace/CRegressionRDBM/creg/tools.py",
		"/home/u1796377/.config/sublime-text-3/Packages/User/sublime_jedi.sublime-settings",
		"/disk/workspace/CRegressionRDBM/creg/__init__.py",
		"/disk/workspace/CRegressionRDBM/tests/context.py",
		"/disk/workspace/CRegressionRDBM/creg/cli/client.py",
		"/disk/workspace/CRegressionRDBM/results/deletable.log",
		"/disk/workspace/CRegressionRDBM/creg/cli/__init__.py",
		"/disk/workspace/CRegressionRDBM/tests/test_ClientClass.py",
		"/disk/workspace/CRegressionRDBM/tests/test_advanced.py",
		"/disk/workspace/CRegressionRDBM/tests/test_basic.py",
		"/disk/workspace/CRegressionRDBM/creg/Data.py",
		"/disk/workspace/CRegressionRDBM/creg/run_code.py",
		"/disk/workspace/CRegressionRDBM/setup.py",
		"/home/u1796377/.config/sublime-text-3/Packages/User/All Autocomplete.sublime-settings",
		"/home/u1796377/.config/sublime-text-3/Packages/User/python_anaconda.sublime-build",
		"/disk/workspace/CRegressionRDBM.sublime-project",
		"/home/u1796377/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/u1796377/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
		"/disk/workspace/CRegressionRDBM/cpm/ClientClass.py",
		"/disk/workspace/CRegressionRDBM/cpm/Data.py",
		"/home/u1796377/.config/sublime-text-3/Packages/Fold Python/Default (Linux).sublime-keymap",
		"/disk/workspace/CRegressionRDBM/cpm/helpers.py",
		"/disk/workspace/CRegressionRDBM/cpm/core.py",
		"/disk/workspace/CRegressionRDBM/cpm/__init__.py",
		"/disk/workspace/Cregression/tests/context.py",
		"/disk/workspace/Cregression/cpm/run_code.py",
		"/disk/workspace/Cregression/tests/test_basic.py",
		"/home/u1796377/Program/blinkdb_eclipse/blinkdb_initial_repository/blinkdb/hive_blinkdb/conf/hive-default.xml.template",
		"/home/u1796377/Program/blinkdb_eclipse/blinkdb_initial_repository/blinkdb/hive_blinkdb/conf/hive-site.xml",
		"/home/u1796377/Program/blinkdb/conf/blinkdb-env.sh",
		"/home/u1796377/Program/blinkdb_eclipse/blinkdb_initial_repository/blinkdb/hive_blinkdb/eclipse-templates/.classpath._hbase",
		"/home/u1796377/Program/blinkdb_eclipse/blinkdb_initial_repository/blinkdb/hive_blinkdb/eclipse-templates/.classpath",
		"/home/u1796377/Program/blinkdb_eclipse/blinkdb_initial_repository/blinkdb/hive_blinkdb/.classpath._hbase",
		"/home/u1796377/Program/blinkdb_eclipse/blinkdb/conf/blinkdb-env.sh",
		"/home/u1796377/Program/blinkdb/hive_blinkdb/ql/src/test/queries/clientpositive/date_3.q",
		"/home/u1796377/Program/blinkdb/bin/dev/run-tests-from-scratch",
		"/home/u1796377/Program/blinkdb/hive_blinkdb/build.xml",
		"/home/u1796377/workspace/ant_trial/src/qingzhi/EmpBusinessLogic.java",
		"/home/u1796377/workspace/ant_trial/src/qingzhi/EmployeeDetails.java",
		"/home/u1796377/workspace/ant_trial/src/qingzhi/MessageUtil.java",
		"/home/u1796377/workspace/ant_trial/build.xml",
		"/home/u1796377/workspace/ant_trial/src/test/TestRunner.java",
		"/home/u1796377/workspace/ant_trial/src/test/TestJunit1.java",
		"/home/u1796377/workspace/ant_trial/src/test/TestJunit1.class",
		"/home/u1796377/workspace/ant_trial/src/test/TestJunit.java",
		"/home/u1796377/workspace/ant_trial/src/HelloWorld.java",
		"/home/u1796377/.config/sublime-text-3/Packages/AdvancedNewFile/README.md",
		"/home/u1796377/workspace/ant_trial/haha.java",
		"/home/u1796377/Desktop/myWebSite/test.html",
		"/var/www/html/index.html",
		"/home/u1796377/Desktop/myWebSite/myScript.js",
		"/home/u1796377/Desktop/myWebSite/index.html",
		"/home/u1796377/Desktop/index.html",
		"/home/u1796377/Desktop/my.php",
		"/home/u1796377/Desktop/mystyle.css",
		"/home/u1796377/Desktop/test.html",
		"/home/u1796377/Desktop/test1.html"
	],
	"find":
	{
		"height": 27.0
	},
	"find_in_files":
	{
		"height": 104.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"cregression",
			"\t",
			"dt.",
			"this.logger",
			"logger_name=logger_name",
			"ClientClass",
			"()\n",
			"fit",
			"()"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"    ",
			"tools.",
			"self.logger",
			"logger_object=this.logger",
			"CRegression"
		],
		"reverse": true,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 66,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"current_file": "/disk/workspace/CRegressionRDBM/creg/logs.py",
							"default_dir": "/disk/workspace/CRegressionRDBM",
							"git_gutter_is_enabled": false,
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									137,
									153
								],
								[
									189,
									222
								],
								[
									679,
									736
								],
								[
									1654,
									1682
								]
							],
							"symlist":
							[
								"QueryLogs:",
								"    __init__(‚Ä¶)",
								"    set_logging(‚Ä¶)",
								"    set_no_output(‚Ä¶)"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		},
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 1,
					"file": "creg/core.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 76741,
						"regions":
						{
						},
						"selection":
						[
							[
								74852,
								74852
							]
						],
						"settings":
						{
							"SL.14.region_keys":
							[
							],
							"SL.16.region_keys":
							[
							],
							"SL.65.region_keys":
							[
							],
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"complete_parameters": false,
							"git_gutter_is_enabled": true,
							"show_definitions": false,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 30818.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "creg/query_engine.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8206,
						"regions":
						{
						},
						"selection":
						[
							[
								7006,
								7006
							]
						],
						"settings":
						{
							"SL.15.region_keys":
							[
							],
							"SL.17.region_keys":
							[
							],
							"SL.66.region_keys":
							[
							],
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								},
								{
									"characters": ".",
									"selector": "source.python - string - constant.numeric"
								}
							],
							"git_gutter_is_enabled": true,
							"history_list_is_closing": true,
							"show_definitions": false,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2810.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "creg/data_loader.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 29551,
						"regions":
						{
						},
						"selection":
						[
							[
								26399,
								26399
							]
						],
						"settings":
						{
							"SL.16.region_keys":
							[
							],
							"SL.18.region_keys":
							[
							],
							"SL.67.region_keys":
							[
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 9253.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "creg/logs.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1943,
						"regions":
						{
						},
						"selection":
						[
							[
								643,
								643
							]
						],
						"settings":
						{
							"SL.17.region_keys":
							[
							],
							"SL.20.region_keys":
							[
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 342.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 40.0
	},
	"input":
	{
		"height": 40.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.UnitTesting":
	{
		"height": 132.0
	},
	"output.autopep8":
	{
		"height": 126.0
	},
	"output.exec":
	{
		"height": 164.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "Anaconda Python Builder",
	"project": "CRegressionRDBMWorkspace.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"tests/test_basic.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 212.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
